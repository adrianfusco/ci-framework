---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Debug some params
  ansible.builtin.command:
    cmd: ls -l
    chdir: "{{ cifmw_libvirt_manager_installyamls }}"
  register: dir_list_output

- name: Cleaning the World
  debug:
    msg: "{{ dir_list_output.stdout }}"

- name: Compute base image checks
  block:
    - name: Check if base image exists
      ansible.builtin.stat:
        path: "{{ cifmw_libvirt_manager_configuration['vms']['compute'].disk_file_name }}"
      register: disk_file_name_status

    - name: Download base image
      when: not disk_file_name_status.stat.exists
      ansible.builtin.get_url:
        url: "{{ cifmw_libvirt_manager_configuration['vms']['compute'].image_url }}"
        dest: "{{ cifmw_libvirt_manager_configuration['vms']['compute'].disk_file_name }}"
        checksum: sha256:{{ cifmw_libvirt_manager_configuration['vms']['compute'].sha256_image_name }}

- name: Create EDPM compute VMs
  environment:
    PATH: "{{ cifmw_libvirt_manager_oc }}:${PATH}:/usr/bin"
    EDPM_COMPUTE_VCPUS: "{{ cifmw_libvirt_manager_configuration['vms']['compute'].cpus }}"
    EDPM_COMPUTE_RAM: "{{ cifmw_libvirt_manager_configuration['vms']['compute'].memory }}"
    EDPM_COMPUTE_DISK_SIZE: "{{ cifmw_libvirt_manager_configuration['vms']['compute'].disksize }}"
    DISK_FILEPATH: "{{ cifmw_libvirt_manager_configuration['vms']['compute'].disk_file_name }}"
  ci_make:
    chdir: "{{ cifmw_libvirt_manager_installyamls }}/devsetup"
    target: "edpm_compute"
    output_dir: "{{ cifmw_libvirt_manager_basedir }}/artifacts"
    params:
      EDPM_COMPUTE_SUFFIX: "{{ item }}"
  with_sequence: start=0 end={{ cifmw_libvirt_manager_configuration['vms']['compute'].amount - 1 }}
